# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: automationservice.proto for package 'automationservice'
# Original file comments:
#
# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreedto in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Protobuf service for the automation framework.
#

require 'grpc'
require 'automationservice_pb'

module Automationservice
  module Automation
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'automationservice.Automation'

      # Start a cluster operation.
      rpc :EnqueueClusterOperation, Automation::EnqueueClusterOperationRequest, Automation::EnqueueClusterOperationResponse
      # TODO(mberlin): Polling this is bad. Implement a subscribe mechanism to wait for changes?
      # Get all details of an active cluster operation.
      rpc :GetClusterOperationDetails, Automation::GetClusterOperationDetailsRequest, Automation::GetClusterOperationDetailsResponse
    end

    Stub = Service.rpc_stub_class
  end
end
