# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vtgate.proto

require 'google/protobuf'

require 'query_pb'
require 'topodata_pb'
require 'vtrpc_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "vtgate.Session" do
    optional :in_transaction, :bool, 1
    repeated :shard_sessions, :message, 2, "vtgate.Session.ShardSession"
    optional :single_db, :bool, 3
    optional :autocommit, :bool, 4
    optional :target_string, :string, 5
    optional :options, :message, 6, "query.ExecuteOptions"
    optional :transaction_mode, :enum, 7, "vtgate.TransactionMode"
    repeated :warnings, :message, 8, "query.QueryWarning"
  end
  add_message "vtgate.Session.ShardSession" do
    optional :target, :message, 1, "query.Target"
    optional :transaction_id, :int64, 2
  end
  add_message "vtgate.ExecuteRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    optional :query, :message, 3, "query.BoundQuery"
    optional :tablet_type, :enum, 4, "topodata.TabletType"
    optional :not_in_transaction, :bool, 5
    optional :keyspace_shard, :string, 6
    optional :options, :message, 7, "query.ExecuteOptions"
  end
  add_message "vtgate.ExecuteResponse" do
    optional :error, :message, 1, "vtrpc.RPCError"
    optional :session, :message, 2, "vtgate.Session"
    optional :result, :message, 3, "query.QueryResult"
  end
  add_message "vtgate.ExecuteShardsRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    optional :query, :message, 3, "query.BoundQuery"
    optional :keyspace, :string, 4
    repeated :shards, :string, 5
    optional :tablet_type, :enum, 6, "topodata.TabletType"
    optional :not_in_transaction, :bool, 7
    optional :options, :message, 8, "query.ExecuteOptions"
  end
  add_message "vtgate.ExecuteShardsResponse" do
    optional :error, :message, 1, "vtrpc.RPCError"
    optional :session, :message, 2, "vtgate.Session"
    optional :result, :message, 3, "query.QueryResult"
  end
  add_message "vtgate.ExecuteKeyspaceIdsRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    optional :query, :message, 3, "query.BoundQuery"
    optional :keyspace, :string, 4
    repeated :keyspace_ids, :bytes, 5
    optional :tablet_type, :enum, 6, "topodata.TabletType"
    optional :not_in_transaction, :bool, 7
    optional :options, :message, 8, "query.ExecuteOptions"
  end
  add_message "vtgate.ExecuteKeyspaceIdsResponse" do
    optional :error, :message, 1, "vtrpc.RPCError"
    optional :session, :message, 2, "vtgate.Session"
    optional :result, :message, 3, "query.QueryResult"
  end
  add_message "vtgate.ExecuteKeyRangesRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    optional :query, :message, 3, "query.BoundQuery"
    optional :keyspace, :string, 4
    repeated :key_ranges, :message, 5, "topodata.KeyRange"
    optional :tablet_type, :enum, 6, "topodata.TabletType"
    optional :not_in_transaction, :bool, 7
    optional :options, :message, 8, "query.ExecuteOptions"
  end
  add_message "vtgate.ExecuteKeyRangesResponse" do
    optional :error, :message, 1, "vtrpc.RPCError"
    optional :session, :message, 2, "vtgate.Session"
    optional :result, :message, 3, "query.QueryResult"
  end
  add_message "vtgate.ExecuteEntityIdsRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    optional :query, :message, 3, "query.BoundQuery"
    optional :keyspace, :string, 4
    optional :entity_column_name, :string, 5
    repeated :entity_keyspace_ids, :message, 6, "vtgate.ExecuteEntityIdsRequest.EntityId"
    optional :tablet_type, :enum, 7, "topodata.TabletType"
    optional :not_in_transaction, :bool, 8
    optional :options, :message, 9, "query.ExecuteOptions"
  end
  add_message "vtgate.ExecuteEntityIdsRequest.EntityId" do
    optional :type, :enum, 1, "query.Type"
    optional :value, :bytes, 2
    optional :keyspace_id, :bytes, 3
  end
  add_message "vtgate.ExecuteEntityIdsResponse" do
    optional :error, :message, 1, "vtrpc.RPCError"
    optional :session, :message, 2, "vtgate.Session"
    optional :result, :message, 3, "query.QueryResult"
  end
  add_message "vtgate.ExecuteBatchRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    repeated :queries, :message, 3, "query.BoundQuery"
    optional :tablet_type, :enum, 4, "topodata.TabletType"
    optional :as_transaction, :bool, 5
    optional :keyspace_shard, :string, 6
    optional :options, :message, 7, "query.ExecuteOptions"
  end
  add_message "vtgate.ExecuteBatchResponse" do
    optional :error, :message, 1, "vtrpc.RPCError"
    optional :session, :message, 2, "vtgate.Session"
    repeated :results, :message, 3, "query.ResultWithError"
  end
  add_message "vtgate.BoundShardQuery" do
    optional :query, :message, 1, "query.BoundQuery"
    optional :keyspace, :string, 2
    repeated :shards, :string, 3
  end
  add_message "vtgate.ExecuteBatchShardsRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    repeated :queries, :message, 3, "vtgate.BoundShardQuery"
    optional :tablet_type, :enum, 4, "topodata.TabletType"
    optional :as_transaction, :bool, 5
    optional :options, :message, 6, "query.ExecuteOptions"
  end
  add_message "vtgate.ExecuteBatchShardsResponse" do
    optional :error, :message, 1, "vtrpc.RPCError"
    optional :session, :message, 2, "vtgate.Session"
    repeated :results, :message, 3, "query.QueryResult"
  end
  add_message "vtgate.BoundKeyspaceIdQuery" do
    optional :query, :message, 1, "query.BoundQuery"
    optional :keyspace, :string, 2
    repeated :keyspace_ids, :bytes, 3
  end
  add_message "vtgate.ExecuteBatchKeyspaceIdsRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    repeated :queries, :message, 3, "vtgate.BoundKeyspaceIdQuery"
    optional :tablet_type, :enum, 4, "topodata.TabletType"
    optional :as_transaction, :bool, 5
    optional :options, :message, 6, "query.ExecuteOptions"
  end
  add_message "vtgate.ExecuteBatchKeyspaceIdsResponse" do
    optional :error, :message, 1, "vtrpc.RPCError"
    optional :session, :message, 2, "vtgate.Session"
    repeated :results, :message, 3, "query.QueryResult"
  end
  add_message "vtgate.StreamExecuteRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :query, :message, 2, "query.BoundQuery"
    optional :tablet_type, :enum, 3, "topodata.TabletType"
    optional :keyspace_shard, :string, 4
    optional :options, :message, 5, "query.ExecuteOptions"
    optional :session, :message, 6, "vtgate.Session"
  end
  add_message "vtgate.StreamExecuteResponse" do
    optional :result, :message, 1, "query.QueryResult"
  end
  add_message "vtgate.StreamExecuteShardsRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :query, :message, 2, "query.BoundQuery"
    optional :keyspace, :string, 3
    repeated :shards, :string, 4
    optional :tablet_type, :enum, 5, "topodata.TabletType"
    optional :options, :message, 6, "query.ExecuteOptions"
  end
  add_message "vtgate.StreamExecuteShardsResponse" do
    optional :result, :message, 1, "query.QueryResult"
  end
  add_message "vtgate.StreamExecuteKeyspaceIdsRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :query, :message, 2, "query.BoundQuery"
    optional :keyspace, :string, 3
    repeated :keyspace_ids, :bytes, 4
    optional :tablet_type, :enum, 5, "topodata.TabletType"
    optional :options, :message, 6, "query.ExecuteOptions"
  end
  add_message "vtgate.StreamExecuteKeyspaceIdsResponse" do
    optional :result, :message, 1, "query.QueryResult"
  end
  add_message "vtgate.StreamExecuteKeyRangesRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :query, :message, 2, "query.BoundQuery"
    optional :keyspace, :string, 3
    repeated :key_ranges, :message, 4, "topodata.KeyRange"
    optional :tablet_type, :enum, 5, "topodata.TabletType"
    optional :options, :message, 6, "query.ExecuteOptions"
  end
  add_message "vtgate.StreamExecuteKeyRangesResponse" do
    optional :result, :message, 1, "query.QueryResult"
  end
  add_message "vtgate.BeginRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :single_db, :bool, 2
  end
  add_message "vtgate.BeginResponse" do
    optional :session, :message, 1, "vtgate.Session"
  end
  add_message "vtgate.CommitRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
    optional :atomic, :bool, 3
  end
  add_message "vtgate.CommitResponse" do
  end
  add_message "vtgate.RollbackRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :session, :message, 2, "vtgate.Session"
  end
  add_message "vtgate.RollbackResponse" do
  end
  add_message "vtgate.ResolveTransactionRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :dtid, :string, 2
  end
  add_message "vtgate.MessageStreamRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :keyspace, :string, 2
    optional :shard, :string, 3
    optional :key_range, :message, 4, "topodata.KeyRange"
    optional :name, :string, 5
  end
  add_message "vtgate.MessageAckRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :keyspace, :string, 2
    optional :name, :string, 3
    repeated :ids, :message, 4, "query.Value"
  end
  add_message "vtgate.IdKeyspaceId" do
    optional :id, :message, 1, "query.Value"
    optional :keyspace_id, :bytes, 2
  end
  add_message "vtgate.MessageAckKeyspaceIdsRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :keyspace, :string, 2
    optional :name, :string, 3
    repeated :id_keyspace_ids, :message, 4, "vtgate.IdKeyspaceId"
  end
  add_message "vtgate.ResolveTransactionResponse" do
  end
  add_message "vtgate.SplitQueryRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :keyspace, :string, 2
    optional :query, :message, 3, "query.BoundQuery"
    repeated :split_column, :string, 4
    optional :split_count, :int64, 5
    optional :num_rows_per_query_part, :int64, 6
    optional :algorithm, :enum, 7, "query.SplitQueryRequest.Algorithm"
    optional :use_split_query_v2, :bool, 8
  end
  add_message "vtgate.SplitQueryResponse" do
    repeated :splits, :message, 1, "vtgate.SplitQueryResponse.Part"
  end
  add_message "vtgate.SplitQueryResponse.KeyRangePart" do
    optional :keyspace, :string, 1
    repeated :key_ranges, :message, 2, "topodata.KeyRange"
  end
  add_message "vtgate.SplitQueryResponse.ShardPart" do
    optional :keyspace, :string, 1
    repeated :shards, :string, 2
  end
  add_message "vtgate.SplitQueryResponse.Part" do
    optional :query, :message, 1, "query.BoundQuery"
    optional :key_range_part, :message, 2, "vtgate.SplitQueryResponse.KeyRangePart"
    optional :shard_part, :message, 3, "vtgate.SplitQueryResponse.ShardPart"
    optional :size, :int64, 4
  end
  add_message "vtgate.GetSrvKeyspaceRequest" do
    optional :keyspace, :string, 1
  end
  add_message "vtgate.GetSrvKeyspaceResponse" do
    optional :srv_keyspace, :message, 1, "topodata.SrvKeyspace"
  end
  add_message "vtgate.UpdateStreamRequest" do
    optional :caller_id, :message, 1, "vtrpc.CallerID"
    optional :keyspace, :string, 2
    optional :shard, :string, 3
    optional :key_range, :message, 4, "topodata.KeyRange"
    optional :tablet_type, :enum, 5, "topodata.TabletType"
    optional :timestamp, :int64, 6
    optional :event, :message, 7, "query.EventToken"
  end
  add_message "vtgate.UpdateStreamResponse" do
    optional :event, :message, 1, "query.StreamEvent"
    optional :resume_timestamp, :int64, 2
  end
  add_enum "vtgate.TransactionMode" do
    value :UNSPECIFIED, 0
    value :SINGLE, 1
    value :MULTI, 2
    value :TWOPC, 3
  end
end

module Vtgate
  Session = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.Session").msgclass
  Session::ShardSession = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.Session.ShardSession").msgclass
  ExecuteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteRequest").msgclass
  ExecuteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteResponse").msgclass
  ExecuteShardsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteShardsRequest").msgclass
  ExecuteShardsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteShardsResponse").msgclass
  ExecuteKeyspaceIdsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteKeyspaceIdsRequest").msgclass
  ExecuteKeyspaceIdsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteKeyspaceIdsResponse").msgclass
  ExecuteKeyRangesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteKeyRangesRequest").msgclass
  ExecuteKeyRangesResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteKeyRangesResponse").msgclass
  ExecuteEntityIdsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteEntityIdsRequest").msgclass
  ExecuteEntityIdsRequest::EntityId = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteEntityIdsRequest.EntityId").msgclass
  ExecuteEntityIdsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteEntityIdsResponse").msgclass
  ExecuteBatchRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteBatchRequest").msgclass
  ExecuteBatchResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteBatchResponse").msgclass
  BoundShardQuery = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.BoundShardQuery").msgclass
  ExecuteBatchShardsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteBatchShardsRequest").msgclass
  ExecuteBatchShardsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteBatchShardsResponse").msgclass
  BoundKeyspaceIdQuery = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.BoundKeyspaceIdQuery").msgclass
  ExecuteBatchKeyspaceIdsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteBatchKeyspaceIdsRequest").msgclass
  ExecuteBatchKeyspaceIdsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ExecuteBatchKeyspaceIdsResponse").msgclass
  StreamExecuteRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.StreamExecuteRequest").msgclass
  StreamExecuteResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.StreamExecuteResponse").msgclass
  StreamExecuteShardsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.StreamExecuteShardsRequest").msgclass
  StreamExecuteShardsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.StreamExecuteShardsResponse").msgclass
  StreamExecuteKeyspaceIdsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.StreamExecuteKeyspaceIdsRequest").msgclass
  StreamExecuteKeyspaceIdsResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.StreamExecuteKeyspaceIdsResponse").msgclass
  StreamExecuteKeyRangesRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.StreamExecuteKeyRangesRequest").msgclass
  StreamExecuteKeyRangesResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.StreamExecuteKeyRangesResponse").msgclass
  BeginRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.BeginRequest").msgclass
  BeginResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.BeginResponse").msgclass
  CommitRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.CommitRequest").msgclass
  CommitResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.CommitResponse").msgclass
  RollbackRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.RollbackRequest").msgclass
  RollbackResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.RollbackResponse").msgclass
  ResolveTransactionRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ResolveTransactionRequest").msgclass
  MessageStreamRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.MessageStreamRequest").msgclass
  MessageAckRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.MessageAckRequest").msgclass
  IdKeyspaceId = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.IdKeyspaceId").msgclass
  MessageAckKeyspaceIdsRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.MessageAckKeyspaceIdsRequest").msgclass
  ResolveTransactionResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.ResolveTransactionResponse").msgclass
  SplitQueryRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.SplitQueryRequest").msgclass
  SplitQueryResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.SplitQueryResponse").msgclass
  SplitQueryResponse::KeyRangePart = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.SplitQueryResponse.KeyRangePart").msgclass
  SplitQueryResponse::ShardPart = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.SplitQueryResponse.ShardPart").msgclass
  SplitQueryResponse::Part = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.SplitQueryResponse.Part").msgclass
  GetSrvKeyspaceRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.GetSrvKeyspaceRequest").msgclass
  GetSrvKeyspaceResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.GetSrvKeyspaceResponse").msgclass
  UpdateStreamRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.UpdateStreamRequest").msgclass
  UpdateStreamResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.UpdateStreamResponse").msgclass
  TransactionMode = Google::Protobuf::DescriptorPool.generated_pool.lookup("vtgate.TransactionMode").enummodule
end
